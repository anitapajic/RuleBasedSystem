package cep;

import com.ftn.sbnz.model.events.Landing
import com.ftn.sbnz.model.events.TransactionEvent
import com.ftn.sbnz.model.models.Account

rule "flight landing rule"
    when
        $e1: Landing($flight1: flight)
        $e2: Landing(this != $e1, this before[0s, 3s] $e1, $flight2: flight)
    then
        System.out.println("Flight " + $flight1 + " redirected because " + $flight2 + " is still on track.");
end

//rule "duplicate transactions"
//    when
//        $t1: TransactionEvent($c1: customerId, $total1: totalAmount, $transactionId: id)
//        $t2: TransactionEvent(this != $t1, customerId == $c1, totalAmount == $total1, this after[0s, 15s] $t1)
//    then
//        System.out.println("Transaction duplicate - " + $t2.getId());
//end


rule "make suspicious transaction rule"
    when
        $acc: Account($accCustomerId: customerId, $accountState: accountState)
        $t1: TransactionEvent(  customerId == $accCustomerId,
                                totalAmount > 0.4 * $accountState,
                                $transaction1CustomerId: customerId,
                                $transaction1Total: totalAmount)

        $t2: TransactionEvent(
                                customerId == $accCustomerId,
                                totalAmount > 0.4 * $accountState,
                                this != $t1,
                                this after[0s, 4s] $t1,
                                $transaction1Total + totalAmount > 0.9 * $accountState)

    then
        System.out.println("Sus transactions: " + $t1.getId() + " and " + $t2.getId());
end
